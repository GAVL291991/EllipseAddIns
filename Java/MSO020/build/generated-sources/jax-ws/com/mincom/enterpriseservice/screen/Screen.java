
package com.mincom.enterpriseservice.screen;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.mincom.ews.service.connectivity.OperationContext;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Screen", targetNamespace = "http://screen.enterpriseservice.mincom.com")
@XmlSeeAlso({
    com.mincom.enterpriseservice.exception.ObjectFactory.class,
    com.mincom.enterpriseservice.screen.ObjectFactory.class,
    com.mincom.ews.service.connectivity.ObjectFactory.class
})
public interface Screen {


    /**
     * 
     * @param msoName
     * @param context
     * @return
     *     returns com.mincom.enterpriseservice.screen.ScreenDTO
     * @throws InvalidConnectionIdException
     * @throws EnterpriseServiceException
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://screen.enterpriseservice.mincom.com")
    @RequestWrapper(localName = "executeScreen", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.ExecuteScreen")
    @ResponseWrapper(localName = "executeScreenResponse", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.ExecuteScreenResponse")
    public ScreenDTO executeScreen(
        @WebParam(name = "context", targetNamespace = "http://screen.enterpriseservice.mincom.com")
        OperationContext context,
        @WebParam(name = "msoName", targetNamespace = "http://screen.enterpriseservice.mincom.com")
        String msoName)
        throws EnterpriseServiceException, InvalidConnectionIdException
    ;

    /**
     * 
     * @param screenSendRequestDTO
     * @param context
     * @return
     *     returns com.mincom.enterpriseservice.screen.ScreenDTO
     * @throws InvalidConnectionIdException
     * @throws EnterpriseServiceException
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://screen.enterpriseservice.mincom.com")
    @RequestWrapper(localName = "submit", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.Submit")
    @ResponseWrapper(localName = "submitResponse", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.SubmitResponse")
    public ScreenDTO submit(
        @WebParam(name = "context", targetNamespace = "http://screen.enterpriseservice.mincom.com")
        OperationContext context,
        @WebParam(name = "screenSendRequestDTO", targetNamespace = "http://screen.enterpriseservice.mincom.com")
        ScreenSubmitRequestDTO screenSendRequestDTO)
        throws EnterpriseServiceException, InvalidConnectionIdException
    ;

    /**
     * 
     * @param context
     * @throws InvalidConnectionIdException
     * @throws EnterpriseServiceException
     */
    @WebMethod
    @RequestWrapper(localName = "positionToMenu", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.PositionToMenu")
    @ResponseWrapper(localName = "positionToMenuResponse", targetNamespace = "http://screen.enterpriseservice.mincom.com", className = "com.mincom.enterpriseservice.screen.PositionToMenuResponse")
    public void positionToMenu(
        @WebParam(name = "context", targetNamespace = "http://screen.enterpriseservice.mincom.com")
        OperationContext context)
        throws EnterpriseServiceException, InvalidConnectionIdException
    ;

}
