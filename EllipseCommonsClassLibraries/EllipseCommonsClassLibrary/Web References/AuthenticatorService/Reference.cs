//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Threading;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using EllipseCommonsClassLibrary.Properties;

#pragma warning disable 1591

namespace EllipseCommonsClassLibrary.AuthenticatorService {
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="AuthenticatorServiceHttpBinding", Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class AuthenticatorService : SoapHttpClientProtocol {
        
        private SendOrPostCallback authenticateOperationCompleted;
        
        private SendOrPostCallback flushOperationCompleted;
        
        private SendOrPostCallback getDistrictsOperationCompleted;
        
        private SendOrPostCallback getPositionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthenticatorService() {
            this.Url = Settings.Default.EllipseCommonsClassLibrary_AuthenticatorService_AuthenticatorService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event authenticateCompletedEventHandler authenticateCompleted;
        
        /// <remarks/>
        public event flushCompletedEventHandler flushCompleted;
        
        /// <remarks/>
        public event getDistrictsCompletedEventHandler getDistrictsCompleted;
        
        /// <remarks/>
        public event getPositionsCompletedEventHandler getPositionsCompleted;
        
        /// <remarks/>
        [SoapDocumentMethod("", RequestNamespace="http://connectivity.service.ews.mincom.com", ResponseNamespace="http://connectivity.service.ews.mincom.com", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public void authenticate([XmlElement(IsNullable=true)] OperationContext context) {
            this.Invoke("authenticate", new object[] {
                        context});
        }
        
        /// <remarks/>
        public void authenticateAsync(OperationContext context) {
            this.authenticateAsync(context, null);
        }
        
        /// <remarks/>
        public void authenticateAsync(OperationContext context, object userState) {
            if ((this.authenticateOperationCompleted == null)) {
                this.authenticateOperationCompleted = new SendOrPostCallback(this.OnauthenticateOperationCompleted);
            }
            this.InvokeAsync("authenticate", new object[] {
                        context}, this.authenticateOperationCompleted, userState);
        }
        
        private void OnauthenticateOperationCompleted(object arg) {
            if ((this.authenticateCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.authenticateCompleted(this, new AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("", RequestNamespace="http://connectivity.service.ews.mincom.com", ResponseNamespace="http://connectivity.service.ews.mincom.com", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        public void flush([XmlElement(IsNullable=true)] OperationContext context) {
            this.Invoke("flush", new object[] {
                        context});
        }
        
        /// <remarks/>
        public void flushAsync(OperationContext context) {
            this.flushAsync(context, null);
        }
        
        /// <remarks/>
        public void flushAsync(OperationContext context, object userState) {
            if ((this.flushOperationCompleted == null)) {
                this.flushOperationCompleted = new SendOrPostCallback(this.OnflushOperationCompleted);
            }
            this.InvokeAsync("flush", new object[] {
                        context}, this.flushOperationCompleted, userState);
        }
        
        private void OnflushOperationCompleted(object arg) {
            if ((this.flushCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.flushCompleted(this, new AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("", RequestNamespace="http://connectivity.service.ews.mincom.com", ResponseNamespace="http://connectivity.service.ews.mincom.com", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        [return: XmlArray("districts", IsNullable=true)]
        public NameValuePair[] getDistricts([XmlElement(IsNullable=true)] OperationContext context) {
            object[] results = this.Invoke("getDistricts", new object[] {
                        context});
            return ((NameValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void getDistrictsAsync(OperationContext context) {
            this.getDistrictsAsync(context, null);
        }
        
        /// <remarks/>
        public void getDistrictsAsync(OperationContext context, object userState) {
            if ((this.getDistrictsOperationCompleted == null)) {
                this.getDistrictsOperationCompleted = new SendOrPostCallback(this.OngetDistrictsOperationCompleted);
            }
            this.InvokeAsync("getDistricts", new object[] {
                        context}, this.getDistrictsOperationCompleted, userState);
        }
        
        private void OngetDistrictsOperationCompleted(object arg) {
            if ((this.getDistrictsCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.getDistrictsCompleted(this, new getDistrictsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("", RequestNamespace="http://connectivity.service.ews.mincom.com", ResponseNamespace="http://connectivity.service.ews.mincom.com", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
        [return: XmlArray("positions", IsNullable=true)]
        public NameValuePair[] getPositions([XmlElement(IsNullable=true)] OperationContext context) {
            object[] results = this.Invoke("getPositions", new object[] {
                        context});
            return ((NameValuePair[])(results[0]));
        }
        
        /// <remarks/>
        public void getPositionsAsync(OperationContext context) {
            this.getPositionsAsync(context, null);
        }
        
        /// <remarks/>
        public void getPositionsAsync(OperationContext context, object userState) {
            if ((this.getPositionsOperationCompleted == null)) {
                this.getPositionsOperationCompleted = new SendOrPostCallback(this.OngetPositionsOperationCompleted);
            }
            this.InvokeAsync("getPositions", new object[] {
                        context}, this.getPositionsOperationCompleted, userState);
        }
        
        private void OngetPositionsOperationCompleted(object arg) {
            if ((this.getPositionsCompleted != null)) {
                InvokeCompletedEventArgs invokeArgs = ((InvokeCompletedEventArgs)(arg));
                this.getPositionsCompleted(this, new getPositionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            Uri wsUri = new Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.33440")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class OperationContext {
        
        private string districtField;
        
        private int maxInstancesField;
        
        private bool maxInstancesFieldSpecified;
        
        private string positionField;
        
        private bool returnWarningsField;
        
        private bool returnWarningsFieldSpecified;
        
        private RunAs runAsField;
        
        private bool traceField;
        
        private bool traceFieldSpecified;
        
        private string transactionField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public int maxInstances {
            get {
                return this.maxInstancesField;
            }
            set {
                this.maxInstancesField = value;
            }
        }
        
        /// <remarks/>
        [XmlIgnore()]
        public bool maxInstancesSpecified {
            get {
                return this.maxInstancesFieldSpecified;
            }
            set {
                this.maxInstancesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public bool returnWarnings {
            get {
                return this.returnWarningsField;
            }
            set {
                this.returnWarningsField = value;
            }
        }
        
        /// <remarks/>
        [XmlIgnore()]
        public bool returnWarningsSpecified {
            get {
                return this.returnWarningsFieldSpecified;
            }
            set {
                this.returnWarningsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RunAs runAs {
            get {
                return this.runAsField;
            }
            set {
                this.runAsField = value;
            }
        }
        
        /// <remarks/>
        public bool trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
            }
        }
        
        /// <remarks/>
        [XmlIgnore()]
        public bool traceSpecified {
            get {
                return this.traceFieldSpecified;
            }
            set {
                this.traceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.33440")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class RunAs {
        
        private string districtField;
        
        private string positionField;
        
        private string userField;
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Xml", "4.0.30319.33440")]
    [Serializable()]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [XmlType(Namespace="http://connectivity.service.ews.mincom.com")]
    public partial class NameValuePair {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    public delegate void authenticateCompletedEventHandler(object sender, AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    public delegate void flushCompletedEventHandler(object sender, AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    public delegate void getDistrictsCompletedEventHandler(object sender, getDistrictsCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class getDistrictsCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDistrictsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameValuePair[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    public delegate void getPositionsCompletedEventHandler(object sender, getPositionsCompletedEventArgs e);
    
    /// <remarks/>
    [GeneratedCode("System.Web.Services", "4.0.30319.33440")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class getPositionsCompletedEventArgs : AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPositionsCompletedEventArgs(object[] results, Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NameValuePair[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NameValuePair[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591